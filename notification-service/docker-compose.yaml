version: '3.8'

services:
  postgres:
    image: postgres:17-alpine
    container_name: notification_postgres
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-notification_db}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-notification_db}"]
      interval: 5s
      timeout: 5s
      retries: 5

  notification-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: notification_service
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_NAME=${DB_NAME:-notifications}
      - DB_SSL_MODE=${DB_SSL_MODE:-disable}
      - PORT=${PORT:-8080}
      - GIN_MODE=${GIN_MODE:-debug}
      - DB_MAX_OPEN_CONNS=${DB_MAX_OPEN_CONNS:-10}
      - DB_MAX_IDLE_CONNS=${DB_MAX_IDLE_CONNS:-5}
      - DB_CONN_MAX_LIFETIME=${DB_CONN_MAX_LIFETIME:-15m}
    ports:
      - "${PORT:-8080}:8080"
    restart: on-failure

volumes:
  postgres_data: